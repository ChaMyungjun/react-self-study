{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-self-study\\\\final_project\\\\src\\\\api_parsing\\\\weather_api.js\";\nimport React, { Component } from 'react';\nimport Postfeatured from './Postfeatured';\nimport axios from 'axios';\n\nclass weather_api extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: '',\n      name: '',\n      location: ''\n    };\n    this.api = axios.create({\n      baseURL: 'https://api.openweathermap.org/data/2.5'\n    });\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      const getWeather = this.api.get('/weather', {\n        params: {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n          appid: '4005857b222799490b299bd4b2ffd286'\n        }\n      }, err => {\n        //default key create position lat=\"35.1600085\" lon=\"126.851411\"\n        // params: {\n        //   lat: '35.1600085',\n        //   lon: '126.851411'\n        // }, \n        console.log(err);\n      });\n      getWeather.then(res => {\n        this.setState({\n          temp: Math.ceil(res.data.main.temp - 273.15),\n          //화씨에서 섭씨로 변경\n          name: res.data.weather[0].main,\n          //날씨\n          location: res.data.name\n        });\n      }).catch(err => console.log(err));\n    });\n  }\n\n  render() {\n    const {\n      temp,\n      name,\n      location\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Postfeatured, {\n      temp: temp,\n      name: name,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default weather_api;","map":{"version":3,"sources":["C:/react-self-study/final_project/src/api_parsing/weather_api.js"],"names":["React","Component","Postfeatured","axios","weather_api","state","temp","name","location","api","create","baseURL","componentDidMount","navigator","geolocation","getCurrentPosition","position","getWeather","get","params","lat","coords","latitude","lon","longitude","appid","err","console","log","then","res","setState","Math","ceil","data","main","weather","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD0B;AAAA,SAQlCC,GARkC,GAQ5BN,KAAK,CAACO,MAAN,CAAa;AACjBC,MAAAA,OAAO,EAAE;AADQ,KAAb,CAR4B;AAAA;;AAYlCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,YAAMC,UAAU,GAAG,KAAKR,GAAL,CAASS,GAAT,CACjB,UADiB,EAEjB;AACEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAEJ,QAAQ,CAACK,MAAT,CAAgBC,QADf;AAENC,UAAAA,GAAG,EAAEP,QAAQ,CAACK,MAAT,CAAgBG,SAFf;AAGNC,UAAAA,KAAK,EAAE;AAHD;AADV,OAFiB,EAShBC,GAAD,IAAS;AACP;AACA;AACA;AACA;AACA;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAjBgB,CAAnB;AAmBAT,MAAAA,UAAU,CACPY,IADH,CACSC,GAAD,IAAS;AACb,aAAKC,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAE0B,IAAI,CAACC,IAAL,CAAUH,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc7B,IAAd,GAAqB,MAA/B,CADM;AACkC;AAC9CC,UAAAA,IAAI,EAAEuB,GAAG,CAACI,IAAJ,CAASE,OAAT,CAAiB,CAAjB,EAAoBD,IAFd;AAEoB;AAChC3B,UAAAA,QAAQ,EAAEsB,GAAG,CAACI,IAAJ,CAAS3B;AAHP,SAAd;AAKD,OAPH,EAQG8B,KARH,CAQUX,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARlB;AASD,KA7BD;AA8BD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAA2B,KAAKH,KAAtC;AACA,wBAAO,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEC,IAApB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAsC,MAAA,QAAQ,EAAEC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhDiC;;AAmDpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Postfeatured from './Postfeatured'\r\nimport axios from 'axios';\r\n\r\nclass weather_api extends Component {\r\n  state = {\r\n    temp: '',\r\n    name: '',\r\n    location: '',\r\n  };\r\n\r\n  //api baseURL과 APIID 설정\r\n  api = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5',\r\n  });\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const getWeather = this.api.get(\r\n        '/weather',\r\n        {\r\n          params: {\r\n            lat: position.coords.latitude,\r\n            lon: position.coords.longitude,\r\n            appid: '4005857b222799490b299bd4b2ffd286'\r\n          },\r\n        },\r\n        (err) => {\r\n          //default key create position lat=\"35.1600085\" lon=\"126.851411\"\r\n          // params: {\r\n          //   lat: '35.1600085',\r\n          //   lon: '126.851411'\r\n          // }, \r\n                                                                                                                                                                                                                                                                 \r\n          console.log(err);\r\n        }\r\n      );\r\n      getWeather\r\n        .then((res) => {\r\n          this.setState({\r\n            temp: Math.ceil(res.data.main.temp - 273.15), //화씨에서 섭씨로 변경\r\n            name: res.data.weather[0].main, //날씨\r\n            location: res.data.name,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { temp, name, location } = this.state;\r\n    return <Postfeatured temp={temp} name={name} location={location} />;\r\n  }\r\n}\r\n\r\nexport default weather_api;\r\n"]},"metadata":{},"sourceType":"module"}